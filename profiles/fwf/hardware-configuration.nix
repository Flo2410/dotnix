# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
    kernelParams = ["amdgpu.sg_display=0"];
    supportedFilesystems = ["btrfs"];

    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usbhid" "uas" "sd_mod"];
      kernelModules = [];
      luks.devices."crypt" = {
        device = "/dev/disk/by-uuid/de5260b7-a5c7-4a85-bb82-395e533921d2";
        preLVM = true;
      };
      systemd = {
        enable = true;
        tpm2.enable = true;
        # sudo systemd-cryptenroll --tpm2-device=auto --tpm2-pcrs=0+2+7+12 --wipe-slot=tpm2 <disk>
      };
    };
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/1265-BD7B";
    fsType = "vfat";
    options = ["umask=0077"];
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/62f508d6-bd71-4c41-8e81-13d152f898aa";
    fsType = "btrfs";
    options = ["subvol=root" "compress=zstd" "noatime"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/62f508d6-bd71-4c41-8e81-13d152f898aa";
    fsType = "btrfs";
    options = ["subvol=home" "compress=zstd" "noatime"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/62f508d6-bd71-4c41-8e81-13d152f898aa";
    fsType = "btrfs";
    options = ["subvol=nix" "compress=zstd" "noatime"];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/62f508d6-bd71-4c41-8e81-13d152f898aa";
    fsType = "btrfs";
    options = ["subvol=log" "compress=zstd" "noatime"];
    neededForBoot = true;
  };

  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/62f508d6-bd71-4c41-8e81-13d152f898aa";
    fsType = "btrfs";
    options = ["subvol=swap" "noatime"];
  };

  swapDevices = [{device = "/swap/swapfile";}];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp192s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
